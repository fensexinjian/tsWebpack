1、git init -y 初始化项目，生成package.json
2、cnpm i -D webpack webpack-cli typescript ts-loader
(webpack：打包工具核心代码
webpack-cli：webpack命令行工具
typescript：ts核心包
ts-loader:webpack加载器，通过ts-loader可以将webpack和ts进行整合)
3、编写webpack配置文件webpack.config.js
4、编写ts配置文件tsconfig.json
5、package.json中编辑打包命令"build":"webpack"
6、动态生成html文件，
cnpm i -D html-webpack-plugin,
webpack.config.js 中添加配置：
引入 const HTMLWebpackPlugin=require('html-webpack-plugin')
plugins:{
   new HTMLWebpackPlugin(options:{
      ; title:"自定义标题"
      template: "./src/index.html" ;  // 自定义htm网页模板
   })
}
7、自动形成网页、实时更新代码
cnpm i -D webpack-dev-server
package.json中编辑打包命令"start":"webpack serve --open chrome.exe"
webpack.config.js 配置文件中 添加：mode: 'development',
8、dist先清空，在添加   !!!!这一步目前出现错误
cnpm install -D clean-webpack-plugin 
webpack.config.js 配置文件中
; 引入
const {CleanWebpackPlugin}=require('clean-webpack-plugin')
; 配置webpack插件
 new CleanWebpackPlugin(),
 9、控制模块的引入
 resolve：{
    extensions:['.ts','.js']
 }
